variables:
    SolutionBaseName: 'DFC.Api.Lmi.Import'
    ArmTemplateRoot: "$(System.DefaultWorkingDirectory)/Resources/ArmTemplates"
    BuildPlatform: 'any cpu'
    BuildConfiguration: 'release'

resources:
  repositories:
  - repository: self
  - repository: dfc-devops
    type: github
    name: SkillsFundingAgency/dfc-devops
    ref: refs/tags/v1.11.2
    endpoint: 'SkillsFundingAgency'

pool:
  name: NCS - CI and CD
  demands:
  - msbuild
  - visualstudio

trigger: 
  branches:
    include: 
    - dev
    - master

pr:
  branches:
    include: 
    - dev
    - master

stages:
- stage: Build
  jobs:
  - job:
    displayName: Build and test application & templates"
    steps:
    - template: /AzureDevOpsTemplates/Build/StepTemplates/dfc-arm-build.yml@dfc-devops
      parameters:
        ArmTemplateRoot: '${{ variables.ArmTemplateRoot }}'
        SolutionBaseName: '${{ variables.SolutionBaseName }}'

    - template: AzureDevOpsTemplates\Build\StepTemplates\dfc-dotnetcore-build-sonar.yml@dfc-devops
      parameters:
        SolutionBaseName: $(SolutionBaseName)
        BuildPlatform: $(BuildPlatform)
        BuildConfiguration: $(BuildConfiguration)
        DotNetCoreVersion: '3.1.100'
        PublishWebApp: true
        TestSuffix: UnitTests

- stage: DeployToLabApiLmiImport
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  displayName: Deploy to LAB_ApiLmiImport
  variables:
  - group: dfc-shared-lab
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-lab
  - group: dfc-app-shared-lab
  - group: 'KeyVault - dfc-lab-shared-kv'
  - template: VariableTemplates/LabEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: LAB_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToLabDraftApiLmiImport
  condition: succeeded()
  displayName: Deploy to LAB-DRAFT_ApiLmiImport
  variables:
  - group: dfc-shared-lab
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-lab
  - group: dfc-app-shared-lab
  - group: 'KeyVault - dfc-lab-shared-kv'
  - template: VariableTemplates/LabDraftEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: LAB-DRAFT_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToDevApiLmiImport
  condition: succeeded()
  displayName: Deploy to DEV_ApiLmiImport
  variables:
  - group: dfc-shared-dev
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-dev
  - group: dfc-app-shared-dev
  - group: 'KeyVault - dfc-dev-shared-kv'
  - template: VariableTemplates/DevEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: DEV_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToDevDraftApiLmiImport
  condition: succeeded()
  displayName: Deploy to DEV-DRAFT_ApiLmiImport
  variables:
  - group: dfc-shared-dev
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-dev
  - group: dfc-app-shared-dev
  - group: 'KeyVault - dfc-dev-shared-kv'
  - template: VariableTemplates/DevDraftEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: DEV-DRAFT_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToSitApiLmiImport
  condition: succeeded()
  displayName: Deploy to SIT_ApiLmiImport
  variables:
  - group: dfc-shared-sit
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-sit
  - group: dfc-app-shared-sit
  - group: 'KeyVault - dfc-sit-shared-kv'
  - template: VariableTemplates/SitEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: SIT_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToSitDraftApiLmiImport
  condition: succeeded()
  displayName: Deploy to SIT-DRAFT_ApiLmiImport
  variables:
  - group: dfc-shared-sit
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-sit
  - group: dfc-app-shared-sit
  - group: 'KeyVault - dfc-sit-shared-kv'
  - template: VariableTemplates/SitDraftEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: SIT-draft_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis: 
        -
          - name: import
            azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToPPApiLmiImport
  condition: and(eq(dependencies.Build.result,'Succeeded'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Deploy to PP_ApiLmiImport
  variables:
  - group: dfc-shared-pp
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-pp
  - group: dfc-app-shared-pp
  - group: 'KeyVault - dfc-pp-shared-kv'
  - template: VariableTemplates/PPEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-DIG-PreProd (931bc9f6-359c-4f65-a753-1ee191a1fd6c)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: PP_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToPPDraftApiLmiImport
  condition: and(eq(dependencies.DeployToPPApiLmiImport.result,'Succeeded'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Deploy to PP-DRAFT_ApiLmiImport
  variables:
  - group: dfc-shared-pp
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-pp
  - group: dfc-app-shared-pp
  - group: 'KeyVault - dfc-pp-shared-kv'
  - template: VariableTemplates/PPDraftEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-DIG-PreProd (931bc9f6-359c-4f65-a753-1ee191a1fd6c)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: PP-DRAFT_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis: 
        -
          - name: import
            azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToPRDApiLmiImport
  condition: and(eq(dependencies.DeployToPPDraftApiLmiImport.result,'Succeeded'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Deploy to PRD_ApiLmiImport
  variables:
  - group: dfc-shared-prd
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-prd
  - group: dfc-app-shared-prd
  - group: 'KeyVault - dfc-prd-shared-kv'
  - template: VariableTemplates/PRDEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-DIG-Prod (6c93f7dc-6c36-4ea6-8de3-3f4574f88027)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: PRD_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      ApimApiName: $(ApimApiName)
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      Apis:
        -
          - azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'

- stage: DeployToPRDDraftApiLmiImport
  condition: and(eq(dependencies.DeployToPRDApiLmiImport.result,'Succeeded'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Deploy to PRD-DRAFT_ApiLmiImport
  variables:
  - group: dfc-shared-prd
  - group: dfc-app-shared-all
  - group: dfc-stax-shared-prd
  - group: dfc-app-shared-prd
  - group: 'KeyVault - dfc-prd-shared-kv'
  - template: VariableTemplates/PRDDraftEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-DIG-Prod (6c93f7dc-6c36-4ea6-8de3-3f4574f88027)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: '$(ResourceGroup)'
      PackageFile:  "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.DeploymentPackages/${{ variables.SolutionBaseName }}.zip"
      ArmTemplateFolder: "$(Pipeline.Workspace)/${{ variables.SolutionBaseName }}.Resources.ArmTemplates/"
      FunctionAppDomain: '$(FunctionAppDomain)'
      EnvironmentName: PRD-DRAFT_ApiLmiImport
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      ApimLoggerName: "$(ApimLoggerName)"
      ApimProductName: "$(ApimProductName)"
      SharedResourceGroup: "$(SharedResourceGroup)"
      ApimServiceName: "$(ApimServiceName)"
      SubscriptionPosturi: '$(SubscriptionPosturi)'
      ApimApiName: $(ApimApiName)
      Apis: 
        -
          - name: import
            azureFunctionName: '${{ variables.WebAppPrefix }}-api-lmi-import-fa'                        