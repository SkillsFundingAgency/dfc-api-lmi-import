parameters:
  AzureSubscription: ''
  WebAppName: ''
  ResourceGroup: ''
  FunctionAppDomain: ''
  PackageFile: ''
  SharedResourceGroup: ''
  ApimServiceName: ''
  ApimImportScript: ''
  SpecificationPath: ''
  ApimPolicyPath: ''
  ApimProductName: ''
  ApimApiName: ''

steps:
- checkout: dfc-devops
  path: 's/dfc-devops/'

- task: AzureAppServiceManage@0
  displayName: 'Start Azure App Service:${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    Action: 'Start Azure App Service'
    WebAppName: '${{ parameters.WebAppName }}'
    SpecifySlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    Slot: staging

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    appType: functionApp
    WebAppName: '${{ parameters.WebAppName }}'
    Package: "${{ parameters.PackageFile }}"
    deployToSlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    SlotName: staging

- task: AzureAppServiceManage@0
  displayName: 'Swap Slots: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    WebAppName: '${{ parameters.WebAppName }}'
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    SourceSlot: staging

- task: AzureAppServiceManage@0
  displayName: 'Stop Azure App Service Slots: ${{ parameters.WebAppName }}'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    Action: 'Stop Azure App Service'
    WebAppName: '${{ parameters.WebAppName }}'
    SpecifySlotOrASE: true
    ResourceGroupName: '${{ parameters.ResourceGroup }}'
    Slot: staging

- powershell: |
    Write-Host "##vso[task.setvariable variable=FunctionAppUrl]https://${{ parameters.WebAppName }}.${{ parameters.FunctionAppDomain }}"
  displayName: "Set full hostname as variable"

- task: AzurePowerShell@4
  displayName: 'Import OpenAPI specification'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    ScriptPath: '${{ parameters.ApimImportScript }}'
    ScriptArguments: "-ApimResourceGroup '${{ parameters.SharedResourceGroup }}' -InstanceName '${{ parameters.ApimServiceName }}' -ApiName '${{ parameters.ApimProductName }}-${{ parameters.ApimApiName }}' -OpenApiSpecificationFile '${{ parameters.SpecificationPath }}/OpenApi.txt' -ApiPath '${{ parameters.ApimProductName }}/${{ parameters.ApimApiName }}'"
    azurePowerShellVersion: LatestVersion

- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Rate Limit APIM Policy'
  inputs:
    SourcePath: '${{ parameters.ApimPolicyPath }}'
    TargetFileNames: 'ApimPolicy-RateLimit.xml'

- task: AzurePowerShell@5
  displayName: 'Apply Rate Limit APIM Policy'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    ScriptPath: '$(Agent.BuildDirectory)/s/dfc-devops/PSCoreScripts/Set-ApimPolicy.ps1'
    ScriptArguments: '-PolicyScope api -ApimResourceGroup ${{ parameters.SharedResourceGroup }} -ApimServiceName ${{ parameters.ApimServiceName }} -PolicyFilePath "$(Agent.BuildDirectory)/DFC.Api.Lmi.Import.Resources.ApimPolicies/ApimPolicy-RateLimit.xml" -ApiId composite-ui-subscriptions'
    azurePowerShellVersion: LatestVersion

- task: AzurePowerShell@5
  displayName: 'Send a post request to /subscription'
  inputs:
    azureSubscription: '${{ parameters.AzureSubscription }}'
    ScriptType: InlineScript
    Inline: |
     Invoke-WebRequest -Uri ${{ parameters.SubscriptionPosturi }} -Method POST
    errorActionPreference: continue
    azurePowerShellVersion: LatestVersion